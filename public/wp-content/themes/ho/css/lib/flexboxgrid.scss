//
// -- Start editing -- //
//

@import "sass-flex-mixin";

// Set the number of columns you want to use on your layout.
$grid-columns: 12 !default;
// Set the gutter between columns.
$gutter-width: 1rem !default;
// Set a margin for the container sides.
$outer-margin: 2rem !default;
// Create or remove breakpoints for your project

:root {
  --grid-side-margin: 130px;
  --gutter-width: 28px;

  @include max-screen($screen-md) {
    --grid-side-margin: 40px;
    --gutter-width: 20px;
  }

  @include max-screen($screen-sm) {
    --grid-side-margin: 40px;
    --gutter-width: 10px;
  }
  @include max-screen($screen-sm-max) {
    --gutter-width: 10px;
    --grid-side-margin: 20px;
  }
}


// flexboxgrid
// Set the gutter between columns.
$gutter-width: var(--gutter-width);

// Syntax:
// name SIZErem,
$breakpoints:
        sm 48em 46rem,
        md 62em 61rem,
        lg 75em 71rem !default;
$flexboxgrid-max-width: 1200px !default;

//
// -- Stop editing -- //
//

$gutter-compensation: calc(var(--gutter-width) * .5 * -1);
$half-gutter-width: calc(var(--gutter-width) * .5);

.wrapper {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
}

@mixin container-fluid()
{
  position: relative;
  max-width: 1440px;
  margin: 0 auto;

  padding-left: var(--grid-side-margin);
  padding-right: var(--grid-side-margin);

  .box
  {
    position: relative;
  }

  &.container-fluid-mobile-zero {
    @include max-screen($screen-sm) {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.container-fluid
{
  @include container-fluid();
}

@mixin row()
{
  box-sizing: border-box;
  @include flexbox();
  @include flex(0, 1, auto);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

@mixin col()
{
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
  @include flex-grow(1);
  max-width: 100%;
}

.row {
  @include row;
}

.row.reverse {
  @include flex-direction(row-reverse);
}

.col.reverse {
  @include flex-direction(column-reverse);
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;

  // split @include flex(0, 0, auto) into individual props
  @include flex-grow(0);
  @include flex-shrink(0);

  // we leave @include flex-basis(auto) out of common because
  // in some spots we need it and some we dont
  // more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;
.col-#{$name} {
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-#{$i} {
    @include flexboxgrid-sass-col-common;
    @include flex-basis(100% / $grid-columns * $i);
    max-width: 100% / $grid-columns * $i;
  }
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    margin-left: 100% / $grid-columns * $i;
  }
}

@for $i from 1 through $grid-columns {
  .col-#{$name}-offright-#{$i} {
    @include flexboxgrid-sass-col-common;
    margin-right: 100% / $grid-columns * $i;
  }
}
.col-#{$name} {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}

.col-#{$name}-direction {
  @include flex-direction(row);
}

.col-#{$name}-direction-reverse {
  @include flex-direction(column-reverse);
}

.start-#{$name} {
  @include justify-content(flex-start);
  text-align: start;
}

.center-#{$name} {
  @include justify-content(center);
  text-align: center;
}

.end-#{$name} {
  @include justify-content(flex-end);
  text-align: end;
}

.top-#{$name} {
  @include align-items(flex-start);
}

.middle-#{$name} {
  @include align-items(center);
}

.bottom-#{$name} {
  @include align-items(flex-end);
}

.around-#{$name} {
  @include justify-content(space-around);
}

.between-#{$name} {
  @include justify-content(space-between);
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}


@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media (min-width: $size) {
    .container {
      width: $container;
    }

    .col-#{$name} {
      @include flexboxgrid-sass-col-common;
      @include flex-basis(auto);
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        @include flex-basis(100% / $grid-columns * $i);
        max-width: 100% / $grid-columns * $i;
      }
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        margin-left: 100% / $grid-columns * $i;

        html[lang="ar"] & {
          margin-left: 0;
          margin-right: 100% / $grid-columns * $i
        }
      }
    }
    .col-#{$name}-offset-0 {
      margin-left: 0;

      html[lang="ar"] & {
        margin-right: 0
      }
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-offright-#{$i} {
        @include flexboxgrid-sass-col-common;
        margin-right: 100% / $grid-columns * $i
      }
    }

    .col-#{$name} {
      @include flex-grow(1);
      @include flex-basis(0);
      max-width: 100%;
    }
    .start-#{$name} {
      @include justify-content(flex-start);
      text-align: start;
    }

    .center-#{$name} {
      @include justify-content(center);
      text-align: center;
    }

    .end-#{$name} {
      @include justify-content(flex-end);
      text-align: end;
    }

    .top-#{$name} {
      @include align-items(flex-start);
    }

    .middle-#{$name} {
      @include align-items(center);
    }

    .bottom-#{$name} {
      @include align-items(flex-end);
    }

    .around-#{$name} {
      @include justify-content(space-around);
    }

    .between-#{$name} {
      @include justify-content(space-between);
    }

    .first-#{$name} {
      order: -1;
    }

    .last-#{$name} {
      order: 1;
    }

    .col-#{$name}-direction {
      @include flex-direction(row);
    }

    .col-#{$name}-direction-reverse {
      @include flex-direction(column-reverse);
    }
  }
}
